/*!
 * maptalks.mapresty v0.1.0
 * LICENSE : MIT
 * (c) 2016-2017 maptalks.org
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("maptalks")):"function"==typeof define&&define.amd?define(["exports","maptalks"],e):e(t.maptalks=t.maptalks||{},t.maptalks)}(this,function(t,e){"use strict";function r(t,e){for(var r=Object.getOwnPropertyNames(e),o=0;o<r.length;o++){var i=r[o],n=Object.getOwnPropertyDescriptor(e,i);n&&n.configurable&&void 0===t[i]&&Object.defineProperty(t,i,n)}return t}var o=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},i=function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):r(t,e))},n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e},s=function(){function t(e,r,i){o(this,t),this.geometry=e,this.relation=r,this.crs=i}return t.prototype.getGeometry=function(){return this.geometry},t.prototype.toJSON=function(){var t=this.geometry;return this.geometry instanceof e.Geometry&&(t=this.geometry.toGeoJSONGeometry()),{geometry:t,relation:this.relation,crs:this.crs}},t}();e.Util.extend(s,{RELATION_INTERSECT:0,RELATION_CONTAIN:1,RELATION_DISJOINT:2,RELATION_OVERLAP:3,RELATION_TOUCH:4,RELATION_WITHIN:5,RELATION_INTERECTNOTCONTAIN:100,RELATION_CONTAINCENTER:101,RELATION_CENTERWITHIN:102});var a={baseUrl:"",format:"png",showOnTileLoadComplete:!1},l=function(t){function r(e,i){o(this,r);var s=n(this,t.call(this,e,i));return s.n=0,s}return i(r,t),r.fromJSON=function(t){return t&&"DynamicLayer"===t.type?new r(t.id,t.options):null},r.prototype.reload=function(){this.n+=1,this.load()},r.prototype.onAdd=function(){var t=this,r=this.getMap();return!(!this.options.layers||!this.options.mapdb)&&(this._loadDynamicTimeout&&clearTimeout(this._loadDynamicTimeout),this._loadDynamicTimeout=setTimeout(function(){e.Ajax.post({url:t.options.baseUrl,headers:{"Content-Type":"application/json"}},t._buildMapConfig(),function(r,o){if(r)throw r;var i=e.Util.parseJSON(o);i&&i.hasOwnProperty("token")&&(t._token=i.token,t._renderer.render(t.options.showOnTileLoadComplete))})},r.options.zoomAnimationDuration+80),!1)},r.prototype._getTileUrl=function(t,e,r){var o=[];return o.push(this.options.baseUrl),o.push(this._token),o.push(r),o.push(t),o.push(e+"."+this.options.format),o.join("/")},r.prototype._buildMapConfig=function(){var t=this.getMap(),r={};r.version="1.0.0",r.extent=t.getMaxExtent();var o=t.getView();r.options={center:t.getCenter(),zoom:t.getZoom(),view:o.options},r.layers=[];for(var i=0,n=this.options.layers.length;i<n;i++){var a=this.options.layers[i],l={condition:a.condition?a.condition:"",resultFields:a.fields?a.fields:["*"]};this.options.resultCRS&&(l.resultCRS=this.options.resultCRS),a.spatialFilter&&e.Util.isObject(a.spatialFilter)&&(a.spatialFilter instanceof s?l.spatialFilter=a.spatialFilter.toJSON():l.spatialFilter=a.spatialFilter);var p=a.type||"maptalks",u={database:this.options.mapdb,layer:a.table||a.name,queryFilter:l};"maptalks"!==p?e.Util.extend(u,a.options||{}):e.Util.extend(u,{style:a.style?a.style:{}});var c={id:a.id||a.name,type:p,options:u};r.layers.push(c)}return r},r}(e.TileLayer);l.mergeOptions(a),l.registerJSONType("DynamicLayer");var p=function(){function t(e){o(this,t),e&&(this.host=e.host,this.port=e.port,this.protocol=e.protocol,this.mapdb=e.mapdb)}return t.prototype.check=function(){return!!this.mapdb},t.prototype.getHost=function(){return this.port||this.protocol?(this.protocol||"http:")+"//"+this.host+":"+this.port:this.host},t.prototype.identify=function(t,r){if(!t)return this;var o=t.coordinate,i=t.radius,n=new s(new e.Circle(o,i),s.RELATION_INTERSECT),a={spatialFilter:n,condition:t.condition};return t.resultCRS&&(a.resultCRS=t.resultCRS),t.queryFilter=a,t.page=0,t.count=1,this.query(t,r),this},t.prototype.query=function(t,r){if(!t||!this.check())throw new Error("invalid options for FeatureQuery's query method.");if(!t.layer)throw new Error("layer is not specified in query options.");var o=t.layer;if(!o)throw new Error("layer is not specified in query options.");if(e.Util.isArrayHasData(o))o=o.join(",");else if(e.Util.isString(o)){for(var i=o.split(","),n=i.length-1;n>=0;n--)i[n]=i[n].replace(/(^\s*)|(\s*$)/g,"");o=i.join(",")}var s=this.getHost()+"/rest/sdb/databases/"+this.mapdb+"/layers/"+o+"/data?op=query",a=t.queryFilter;a||(a={fields:"*"});var l=this.formQueryString(a);e.Util.isNumber(t.page)&&(l+="&page="+t.page),e.Util.isNumber(t.count)&&(l+="&count="+t.count),e.Ajax.post({url:s},l,function(o,i){if(o)throw o;if(!i)return void(e.Util.isFunction(t.error)&&r({success:!1,errCode:e.Constant.ERROR_CODE_UNKNOWN,error:""}));var n=e.Util.parseJSON(i);if(n)if(n.success){var s=n.data;if(s&&0!==s.length){var l=[];if(a.returnGeometry===!1){for(var p=0,u=s.length;p<u;p++)l.push({layer:s[p].layer,features:s[p].features});r(null,l)}else{for(var c=0,f=s.length;c<f;c++)l.push({layer:s[c].layer,features:e.GeoJSON.toGeometry(s[c].features)});r(null,l)}}else r(null,[])}else r(n);else e.Util.isFunction(t.error)&&r({success:!1,errCode:e.Constant.ERROR_CODE_UNKNOWN,error:""})})},t.prototype.formQueryString=function(t){var r=["encoding=utf-8","mapdb="+this.mapdb];if(t.resultCRS&&r.push("resultCRS="+encodeURIComponent(JSON.stringify(t.resultCRS))),e.Util.isNil(t.returnGeometry)||r.push("returnGeometry="+t.returnGeometry),t.spatialFilter){var o=t.spatialFilter,i=o.geometry;if(i){var n;o instanceof s?n=o.toJSON():(n=o,i instanceof e.Geometry&&(n.geometry=i.toGeoJSONGeometry())),r.push("spatialFilter="+encodeURIComponent(JSON.stringify(n)))}}if(t.condition&&r.push("condition="+encodeURIComponent(t.condition)),t.resultFields){var a=t.resultFields;Array.isArray(a)&&(a=a.join(",")),r.push("fields="+a)}return r.join("&")},t}(),u={lineColor:"#800040",lineWidth:2,lineOpacity:1,lineDasharray:[20,10,5,5,5,10],polygonOpacity:0},c=function(){function t(e){o(this,t),e&&(this.host=e.host,this.port=e.port,this.protocol=e.protocol)}return t.prototype.getHost=function(){return this.port||this.protocol?(this.protocol||"http:")+"//"+this.host+":"+this.port:this.host},t.prototype.buffer=function(t,r){function o(){var t="distance="+s;return t+="&targets="+encodeURIComponent(JSON.stringify(l))}function i(t){return t instanceof e.Marker?new e.Circle(t.getCoordinates(),s):t instanceof e.Circle?new e.Circle(t.getCoordinates(),t.getRadius()+s):null}var n=t.geometries,s=t.distance;if(e.Util.isString(s)&&(s=+s),!e.Util.isArrayHasData(n)||!e.Util.isNumber(s))throw new Error("invalid parameters");var a=t.symbol||u;Array.isArray(n)||(n=[n]);for(var l=[],p=0,c=n.length;p<c;p++){var f=n[p];if(!(f instanceof e.Marker||f instanceof e.Circle)){var h=f.toGeoJSONGeometry();l.push(h)}}var y=[];if(0===l.length){for(var m=0,d=n.length;m<d;m++){var g=i(n[m]);g&&g.setSymbol(a),y.push(g)}r(null,y)}else{var v=this.getHost()+"/rest/geometry/analysis/buffer",O=o();e.Ajax.post({url:v},O,function(t,o){if(t)throw t;var s=e.Util.parseJSON(o);if(!s.success)return void r(s);for(var l=e.GeoJSON.toGeometry(s.data),p=0,u=0,c=n.length;u<c;u++){var f=void 0;f=n[u]instanceof e.Marker||n[u]instanceof e.Circle?i(n[u]):l[p++],f&&f.setSymbol(a),y.push(f)}r(null,y)})}},t.prototype.relate=function(t,r){function o(){for(var t=i.toGeoJSONGeometry(),e=[],r=0,o=n.length;r<o;r++){var a=n[r].toGeoJSONGeometry();e.push(a)}var l="source="+JSON.stringify(t);return l+="&targets="+JSON.stringify(e),l+="&relation="+s}var i=t.source,n=t.targets,s=t.relation;if(n&&!Array.isArray(n)&&(n=[n]),!i||!e.Util.isArrayHasData(n)||!e.Util.isNumber(t.relation))throw new Error("invalid parameters");var a=this.getHost()+"/rest/geometry/relation",l=o();e.Ajax.post({url:a},l,function(t,o){if(t)throw t;var i=e.Util.parseJSON(o);return i.success?void r(null,i.data):void r.error(i)})},t}();e.Map.include({genSnapConfig:function(t){if(t||(t={extent:this.getExtent(),zoom:this.getZoom(),format:"png"}),t.profile&&t.profile.version)return t;var r=t.extent||this.getExtent(),o=t.zoom||this.getZoom(),i=t.format||"png";r instanceof e.Geometry&&(r=r.getExtent());var n=t.serverDir,s=t.serverFileName,a=this.toJSON(e.Util.extend({},t.profile,{clipExtent:r}));a.extent=r,a.options.zoom=o,a.options.center=r.getCenter();var l=t.extraGeometries;if(l){var p=new e.VectorLayer("__SNAP_extraGeometries_"+e.Util.GUID());if(Array.isArray(l))for(var u=0,c=l.length;u<c;u++)p.addGeometry(l[u].copy());else l instanceof e.Geometry&&p.addGeometry(l.copy());p.getCount()>0&&a.layers.push(p.toJSON())}var f={format:i,profile:a};return n&&(f.serverDir=n),s&&(f.serverFileName=s),f},snap:function(t,r){var o;if(t.snaps&&Array.isArray(t.snaps)){o=[];for(var i=0,n=t.snaps.length;i<n;i++)o.push(this.genSnapConfig(t.snaps[i]))}else o=this.genSnapConfig(t);var s=t.host;return e.Ajax.post({url:s+"/snap/",headers:{"Content-Type":"text/plain"}},o,function(t,e){if(t)throw t;var o=JSON.parse(e);r&&(o.success?r(null,o):r(o))}),this}}),t.DynamicLayer=l,t.FeatureQuery=p,t.TopoQuery=c,t.SpatialFilter=s,Object.defineProperty(t,"__esModule",{value:!0})});